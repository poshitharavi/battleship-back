// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {
  id           String         @id @default(uuid())
  status       GameStatus
  created_at   DateTime       @default(now())
  Ship         Ship[]
  ShipPosition ShipPosition[]

  @@map("games")
}

model Ship {
  id           Int            @id @default(autoincrement())
  game_id      String
  game         Game           @relation(fields: [game_id], references: [id])
  type         ShipType
  player       Player
  created_at   DateTime       @default(now())
  ShipPosition ShipPosition[]

  @@unique([game_id, type, player])
  @@map("ships")
}

model ShipPosition {
  id         Int      @id @default(autoincrement())
  game_id    String
  game       Game     @relation(fields: [game_id], references: [id])
  position   String
  ship_id    Int
  ship       Ship     @relation(fields: [ship_id], references: [id])
  isShot     Boolean  @default(false)
  created_at DateTime @default(now())

  @@unique([game_id, position])
  @@map("ship_posiations")
}

enum GameStatus {
  in_progress
  completed
}

enum ShipType {
  Battleship
  Destroyer1
  Destroyer2
}

enum Player {
  computer
  human
}
